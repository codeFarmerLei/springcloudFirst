server.port=6060

logging.level.root=INFO

#需不需要把自己加入注册中心
eureka.client.register-with-eureka=false
#是否需要获取注册信息
eureka.client.fetch-registry=false
#注册中心地址
eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://${eureka.instance.hostname}:${server.port}/eureka/
#xiaohes.providerName=provider
#spring.application.name=secKill
#
##需要被其他服务调用则设置为true
#eureka.client.register-with-eureka=true
##需要调用其他服务则设置为true
#eureka.client.fetch-registry=true
#
##与eureka服务器地址相同
#eureka.client.service-url.defaultZone=http://localhost:6399/eureka/
#
##将自己的ip地址注册到eureka服务器中
#eureka.instance.prefer-ip-address=true
#
#feign.hystrix.enabled=true

#数据库
spring.datasource.url=jdbc:mysql://192.168.99.100:3306/seckill?characterEncoding=utf-8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root
# 使用druid数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20

#模板
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.cache=false
spring.thymeleaf.cache-period=0
spring.thymeleaf.template.cache=false
#Content-Type值
spring.thymeleaf.content-type=text/html
#thymeleaf end

spring.mvc.static-path-pattern=/**

#mybatis
#mybatis.configuration.cache-enabled= false
#mybatis.configuration.map-underscore-to-camel-case= true
#mybatis.configuration.use-generated-keys= true
#mybatis.configuration.default-executor-type= reuse
#mybatis.configuration.default-statement-timeout= 600

#redis
spring.redis.host=192.168.99.100
spring.redis.port=6379
spring.redis.password=123456
spring.redis.jedis.pool.max-active=500
spring.redis.jedis.pool.max-idle=1000
spring.redis.jedis.pool.max-wait=6000ms
spring.redis.jedis.pool.min-idle=4

# redisson lock
redisson.address=redis://192.168.99.100:6379
redisson.password=123456

##哨兵模式
#redisson.master-name=mymaster
#redisson.password=xxxx
#redisson.sentinel-addresses=10.47.91.83:26379,10.47.91.83:26380,10.47.91.83:26381

#kafka
spring.kafka.bootstrap-servers=192.168.99.100:9092
#\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7ec4
spring.kafka.consumer.group-id=0
#key-value\u5e8f\u5217\u5316\u53cd\u5e8f\u5217\u5316
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#\u6bcf\u6b21\u6279\u91cf\u53d1\u9001\u6d88\u606f\u7684\u6570\u91cf
spring.kafka.producer.batch-size=65536
spring.kafka.producer.buffer-memory=524288


#zookeeper.address
zookeeper.address = 192.168.99.100:2181